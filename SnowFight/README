Radu Ana-Maria, 314CA

Snowfight

	A. OVERVIEW AND MAIN POINTS

Each elf is characterised by its name, coordinates on the map, hp, stamina, the
gloves it wears, its number of kills and whether or not it is still playing at
any given moment.
Each cell of the matrix is characterised by whether or not it is on the glacier,
the elf that occupies it (which I called "occcupant"), its height and the
gloves that can be found on it at any given moment.

Inside the main function, I allocate memory for the initial matrix and the list
of elves. After reading the begining of the input (the radius of the glacier,
the number of players and the initial characteristics of each cell in the
matrix), the function "is_cell_in_glacier" decides which cell is on the initial
glacier.

The function "initialize_occupants" then makes every initial occupant of a cell
-1, value chosen because the id of the first elf is 0. 

After reading the elves and their given characteristics, I then decide which
elf misses the glacier and verify if there is a winner after this first "move".
If not, the elf gets the gloves from the cell it lands on and it is considered
the occupant.

I then read each command, call its designated function and look for a winner.

The main function ends with freeing the used memory and closing the files.

	B. FUNCTIONS AND DETAILS

The movement is generated by "move_player", divided into four other auxiliary
functions, each dealing with one of the four possible directions. After every
accepted move (one that is inside the glacier), the elf may pick up the gloves
from the new cell and becomes its occupant. If there is another elf in that
particular cell already, they will fight.

The "fight" function decides which elf throws a snowball first based on stamina
levels and designates a winner.

The "snowstorm" function generates the snowstorm according to the given
parameters and decides which player is affected.

The "meltdown" function reallocates memory for a smaller map using an
auxiliary matrix. It also transfers all the elves and their characteristics to
the new map, by shifting their position towards the upper left corner of the
old map. This way, the last line and column of the old map are free of any
elves and the radius gets smaller by one unit. It also decides which elves are
affected by the global warming. :(

"print_scoreboard" will sort the list of elves according to three criteria:
'DRY' or 'WET', number of "kills" and name. It does so by using two vectors
separated by the "in_game" parameter and sorting them accordingly. Because the
characteristics of each elf are modified after every move and command, the list
will be a live indicator of the situation on the map.

Although some functions were only used once, such as "initialise_occupants" and
"in_cell_in_glacier", they were implemented in order to diminish the number of
lines in the main function.

